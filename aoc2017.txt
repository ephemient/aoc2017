-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | Advent of Code 2017 - my answers
--   
--   Please see the README on Github at
--   <a>https://github.com/ephemient/aoc2017#readme</a>
@package aoc2017
@version 0.1.0.0


module Day1

-- | The <a>digits</a> function returns a list of digits contained in a
--   string.
digits :: String -> [Int]
day1a :: String -> Int
day1b :: String -> Int


module Day2

-- | The <a>readSpreadsheet</a> function splits lines to rows and spaces to
--   columns.
readSpreadsheet :: String -> [[Int]]
day2a :: String -> Int
day2b :: String -> Int


module Day3
day3a :: Int -> Int
day3b :: Int -> Int


module Day4

-- | The <a>allUnique</a> function returns whether the list has no
--   duplicates.
allUnique :: (Eq a) => [a] -> Bool
day4a :: String -> Int
day4b :: String -> Int


module Day5

-- | At each step, the current item is used as a relative index shift.
steps :: (Int -> Int) -> [Int] -> Int
day5a :: String -> Int
day5b :: String -> Int


module Day6

-- | Reads the words of a string to an array.
parse :: (IArray a e, Ix i, Num i, Read e) => String -> a i e

-- | Returns the index and value of first maximum in an array.
top :: (IArray a e, Ix i, Ord e) => a i e -> (i, e)

-- | Removes the first maximum and redistributes its value throughout the
--   array.
redistribute :: (IArray a i, Integral i, Ix i) => a i i -> a i i

-- | The longest initial sublist with no duplicates.
takeUnique :: (Eq a) => [a] -> [a]

-- | The first sublist <i>[a, b, ..]</i> which is immediately followed by
--   <i>a</i>.
findCycle :: (Eq a) => [a] -> Maybe [a]
day6a :: String -> Int
day6b :: String -> Int
